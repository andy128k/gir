var searchIndex = JSON.parse('{\
"gir":{"doc":"","t":"NNIEKLLFLLFFFLLL","n":["CheckGirFile","Config","OptionStr","RunKind","as_str_ref","borrow","borrow_mut","build_config","from","into","main","print_usage","run_check","try_from","try_into","type_id"],"q":[[0,"gir"],[16,"core::option"],[17,"alloc::string"],[18,"core::result"],[19,"getopts"],[20,"core::any"]],"d":["","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","",""],"i":[3,3,0,0,9,3,3,0,3,3,0,0,0,3,3,3],"f":[0,0,0,0,[-1,[[2,[1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[5,[3,4]]]],[-1,-1,[]],[-1,-2,[],[]],[[],[[5,[6,4]]]],[[1,7],6],[1,[[5,[6,4]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,8,[]]],"c":[],"p":[[15,"str"],[4,"Option",16],[4,"RunKind",0],[3,"String",17],[4,"Result",18],[15,"tuple"],[3,"Options",19],[3,"TypeId",20],[8,"OptionStr",0]],"b":[]},\
"libgir":{"doc":"","t":"DNNDCNNEAMCMLLLLLLLMCLLFMMLMMMLLLLMMMMLLALLLLLLLMMMLLLLLLLMAMLMMLMMLMCLMLMMMMCLMLMLLLLLLLLLLLLAMMDCLLAAAAAAMALMMAALLLLLLAMMLLAAAMAALFAAMAAAAMAAFAAAAAAAAALALLANDEDDNNDLLMMLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLMMLFFFGDFLLMMMLLMLLMMLMMMMMMLLLMLFDLLLLLFLLLLLDFLLMMLLMLMLLMLMNENNNNNNLLLLLLLLLLLLLLLLLLMMDLLLLLMMLMFMLLLLMMFFDLLLLLMMLMFMLLLLMMDNNDDDNNNNNNDEFLLLLLLLLLLLLLMMMLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMMMMLLLLLLMLMMMMMMMMLLLLLLLMMMLLLLLLMMLLLLLLMMLLLLLLMMMMMMMMMMMMMMMMMMMDDDFMMMMLLLLLLMMMMMLLLLLMMMMMLMMMMFFMFLLLLLLMMMMMLLLLFMMLMMMMMMMMMMMMLLMMLLMLLLLLLLLLMMMMDLLLLLLLMMLLLLMDDDLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLDLLMMLLMLLMLMMLLMMLLLMMMRDRDGLLLLMLLLLMMLLLMLMMFMMMLLLLLLMNNNNNNDENMLLLLMMMMMFLLLLLLLLMLLLLLLMMLFMMLFLLMMLLMMMLMMMLMLLLLLLMMNNDENNNNENNFLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLFDFLLMMLLMMMFLMMMMMLLMLMMDMLLMMMLLMLLMMLMFLLLLNNENLLLLLLLLLLLLNNNNNNELLLLLLLLLLLLLLLLLLLDFMMLLLLMLLLLMMLLLLNNNNGDDENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNENLLLLLLLLLLLLLLLLLLLDMFLLMMMLLMLMMMLLLMDGLLLLLLLLLLLNNNNNDENDNNDENFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLFMMFFDDLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLNDNDDDENFLLLLLLLLLLMMLLLLLLLLLLMLMLLLLLLLLLLLLMMLLLLLLMMMLMLMMMLLLLLMMMLLLLLMLLLLLMMMLLLLLDGFLLMMLLMMLLMLMMMMMMLLLFLMMMNNNNNNELLLLLLLLLLLLLLLLMMMIIIIIIKKKKKKFFDNNNENDNNNNNNDNNEDNNDNNDNEDNNNNNDNNNENNRRNNDNNNNNNDNDNNRDDNDNNNNNNDNNDEENDNNDNNNNNNNDNEENDNNNNNNNNNNDNNNNNLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMMLMLLLLLLLLLLMMMMMMMMMMLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLMMMMMMMMLLLLLLMMMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLMLMLLLLLLLLLMLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMLLLMLMMMMMMLLLLLLLLLLMLLMMMMLMLMLLMMMMLMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLMMMMMMMMMMMMMMMMLLMFF","n":["Config","DisplayNotBound","Doc","Env","Library","Normal","Sys","WorkMode","analysis","analysis","analysis_run","auto_path","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_disable_format","class_hierarchy","class_hierarchy_run","clone","clone_into","codegen_generate","concurrency","config","default","deprecate_by_min_version","disable_format","doc_target_path","eq","equivalent","equivalent","equivalent","external_docs_url","external_libraries","extra_versions","feature_dependencies","filter_version","find_ext_library","fmt","fmt","fmt","fmt","from","from","from","from_str","generate_safety_asserts","girs_dirs","girs_version","into","into","into","is_generate_rust_files","is_normal","is_too_low_version","is_totally_deprecated","lib_version_overrides","library","library","library_full_name","library_name","library_version","main_sys_crate_name","make_backup","min_cfg_version","min_required_version","namespaces","namespaces_run","new","objects","resolve_type_ids","show_statistics","single_version_file","split_build_rs","symbols","symbols_run","sys_crate_import","target_path","to_owned","trust_return_value_nullability","try_from","try_from","try_from","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_status","type_status_sys","update_version","use_gi_docgen","work_mode","Analysis","Parameter","borrow","borrow_mut","bounds","c_type","child_properties","class_builder","class_hierarchy","constants","constants","conversion_type","default","enum_imports","enumerations","enums","ffi_type","find_enum_by_function","find_flag_by_function","find_global_function","find_object_by_function","find_object_by_virtual_method","find_record_by_function","flags","flags","flags_imports","fmt","from","function_parameters","functions","general","global_functions","imports","info_base","into","is_gpointer","namespaces","object","objects","out_parameters","properties","record","record_type","records","ref_mode","return_value","run","rust_type","safety_assertion_mode","signals","signatures","special_functions","supertypes","symbols","trampoline_parameters","trampolines","try_from","try_from_glib","try_into","type_id","types","AsRef","Bound","BoundType","Bounds","CallbackInfo","IsA","NoWrapper","PropertyBound","add_for_parameter","add_parameter","alias","alias","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_name","bound_type","callback_modified","callback_type","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error_parameters","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get","get_parameter_bound","get_to_glib_extra","has_alias","into","into","into","into","into","is_empty","iter","iter_lifetimes","need_isa","parameter_name","success_parameters","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_for","type_id","type_id","type_id","type_id","type_id","type_str","type_str","update_imports","implements_c_type","is_mut_ptr","rustify_pointers","ChildProperties","ChildProperty","analyze","borrow","borrow_mut","bounds","child_name","child_type","clone","clone_into","doc_hidden","fmt","from","get_out_ref_mode","getter_name","into","name","nullable","prop_name","set_in_ref_mode","set_params","to_glib_extra","to_owned","try_from","try_into","typ","type_id","analyze","Info","borrow","borrow_mut","fmt","from","into","run","subtypes","supertypes","try_from","try_into","type_id","Info","analyze","borrow","borrow_mut","cfg_condition","deprecated_version","fmt","from","glib_name","into","name","try_from","try_into","typ","type_id","version","Borrow","ConversionType","Direct","Option","Pointer","Result","Scalar","Unknown","borrow","borrow_mut","can_use_to_generate","clone","clone_into","default","eq","equivalent","equivalent","equivalent","fmt","from","into","of","to_owned","try_from","try_into","type_id","err_type","ok_type","Info","borrow","borrow_mut","default","fmt","from","full_name","functions","into","name","new","specials","try_from","try_into","type_","type_id","type_id","visibility","ffi_type","used_ffi_type","Info","borrow","borrow_mut","default","fmt","from","full_name","functions","into","name","new","specials","try_from","try_into","type_","type_id","type_id","visibility","CParameter","IntoRaw","Length","Parameter","Parameters","RustParameter","ToGlibBorrow","ToGlibDirect","ToGlibPointer","ToGlibScalar","ToGlibUnknown","ToSome","Transformation","TransformationType","analyze","analyze_return","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_parameters","c_type","caller_allocates","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","destroy_index","direction","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_parameter","from_return_value","ind_c","ind_c","ind_rust","instance_parameter","into","into","into","into","into","into","is_error","is_to_glib","lib_par","move_","name","name","nullable","ref_mode","rust_parameters","scope","set_to_glib_extra","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transfer","transformation_type","transformations","try_from","try_from","try_from","try_from","try_from","try_from","try_from_glib","try_from_glib","try_into","try_into","try_into","try_into","try_into","try_into","typ","typ","type_id","type_id","type_id","type_id","type_id","type_id","user_data_index","array_length_name","array_length_type","array_name","explicit_target_type","in_trait","instance_parameter","move_","name","name","name","name","needs_into","nullable","nullable","pointer_cast","ref_mode","to_glib_extra","transfer","AsyncFuture","AsyncTrampoline","Info","analyze","assertion","assertion","async","async_future","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bound_name","bounds","callback_type","callbacks","cfg_condition","clone","clone","clone_into","clone_into","codegen_name","commented","deprecated_version","destroys","doc_hidden","doc_ignore_parameters","doc_link","doc_struct_name","doc_trait_name","error_parameters","ffi_ret","find_function","find_index_to_ignore","finish_func_name","finish_function_name","fmt","fmt","fmt","from","from","from","func_name","generate_doc","glib_name","has_error_parameter","hidden","into","into","into","is_async_finish","is_carray_with_direct_elements","is_method","is_method","is_special","kind","name","name","name","new_name","not_version","ns_id","output_params","outs","parameters","remove_params","ret","should_be_doc_linked","should_docs_be_generated","status","success_parameters","to_owned","to_owned","trampoline","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_name","unsafe_","version","visibility","StatusedTypeId","borrow","borrow_mut","clone","clone_into","fmt","from","into","name","status","to_owned","try_from","try_into","type_id","type_id","ImportConditions","Imports","ImportsWithDefault","add","add_defined","add_used_type","add_used_type_with_version","add_used_types","add_with_constraint","add_with_version","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","compare","constraints","default","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","into","into","into","iter","new","partial_cmp","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","with_defaults","with_defined","InfoBase","borrow","borrow_mut","cfg_condition","concurrency","constructors","default","deprecated_version","fmt","from","full_name","functions","functions","imports","into","methods","name","specials","try_from","try_into","type_id","type_id","version","visibility","INTERNAL","Info","MAIN","Namespace","NsId","borrow","borrow","borrow_mut","borrow_mut","crate_name","fmt","fmt","from","from","glib_ns_id","higher_crate_name","index","into","into","is_glib_crate","main","name","package_names","run","shared_libs","symbol_prefixes","sys_crate_name","try_from","try_from","try_into","try_into","type_id","type_id","versions","Builder","ClassExt","ClassExtManual","Ext","ExtManual","Impl","Info","LocationInObject","VirtualExt","base","borrow","borrow","borrow_mut","borrow_mut","builder_postprocess","builder_properties","c_class_type","c_type","child_properties","class","clone","clone_into","default","deref","eq","equivalent","equivalent","equivalent","final_type","fmt","fmt","from","from","function_location","generate_doc_link_info","generate_trait","get_type","has_action_signals","has_builder_properties","has_constructors","has_functions","has_signals","interface","into","into","is_fundamental","is_interface","need_generate_inherent","need_generate_trait","notify_signals","properties","ref_fn","should_generate_impl_block","signals","signatures","supertypes","to_owned","trait_name","try_from","try_from","try_into","try_into","type_id","type_id","unref_fn","virtual_methods","CheckError","Combined","Info","Mode","None","Normal","Optional","ReturnResult","ThrowFunctionReturnStrategy","Throws","Void","analyze","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","can_as_return","clone","clone","clone_into","clone_into","default","default","default","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","into","into","into","is_empty","iter","mode","params","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","use_function_return_for_result","Property","analyze","borrow","borrow_mut","bounds","deprecated_version","fmt","from","func_name","func_name_alias","get_out_ref_mode","get_property_ref_modes","into","is_get","name","nullable","set_bound","set_in_ref_mode","try_from","try_into","typ","type_id","var_name","version","Info","base","borrow","borrow_mut","boxed_inline","clear_function_expression","copy_into_function_expression","default","deref","derives","fmt","from","glib_get_type","init_function_expression","into","is_boxed","new","try_from","try_into","type_","type_id","AutoBoxed","Boxed","RecordType","Refcounted","borrow","borrow_mut","eq","equivalent","equivalent","equivalent","from","into","of","try_from","try_into","type_id","ByRef","ByRefConst","ByRefFake","ByRefImmut","ByRefMut","None","RefMode","borrow","borrow_mut","clone","clone_into","eq","equivalent","equivalent","equivalent","fmt","from","from_str","into","is_ref","of","to_owned","try_from","try_into","type_id","without_unneeded_mut","Info","analyze","base_tid","bool_return_is_error","borrow","borrow_mut","clone","clone_into","commented","default","fmt","from","into","nullable_return_is_error","parameter","to_owned","try_from","try_into","type_id","Err","Ignored","Mismatch","Ok","Result","RustType","RustTypeBuilder","TypeError","Unimplemented","alter_type","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","callback_parameters_config","clone","clone","clone_into","clone_into","concurrency","default","direction","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","from","into","into","into","into_used_types","nullable","ref_mode","scope","to_owned","to_owned","try_build","try_build_param","try_from","try_from","try_from","try_from_glib","try_into","try_into","try_into","try_new","type_id","type_id","type_id","used_types","InMainThread","None","NotInitialized","SafetyAssertionMode","Skip","borrow","borrow_mut","clone","clone_into","default","eq","equivalent","equivalent","equivalent","fmt","from","from_str","into","is_none","of","to_owned","try_from","try_into","type_id","Info","action_emit_name","analyze","borrow","borrow_mut","connect_name","deprecated_version","doc_hidden","fmt","from","generate_doc","into","is_detailed","signal_name","trampoline","try_from","try_into","type_id","version","Signature","Signatures","borrow","borrow_mut","fmt","from","has_for_property","has_in_deps","into","new","try_from","try_into","type_id","Compare","Copy","Display","Equal","Free","FunctionInfo","FunctionType","Hash","Infos","Ref","StaticStringify","TraitInfo","Type","Unref","analyze_imports","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","compare","compare","default","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","first_parameter_mut","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","functions","glib_name","has_trait","into","into","into","into","into","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_owned","traits","traits_mut","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","unhide","version","version","analyze","dependencies","Info","Symbol","borrow","borrow","borrow_mut","borrow_mut","by_c_name","by_c_name_mut","by_tid","clone","clone_into","crate_name","default","fmt","fmt","from","from","full_rust_name","into","into","is_rust_prelude","make_trait","make_trait_method","name","owner_name","parent","run","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Borrow","CParameter","None","Parameters","RustParameter","Transformation","TransformationType","TreePath","analyze","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_parameters","c_type","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","conversion_type","default","direction","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","get","ind_c","ind_rust","into","into","into","into","into","is_real_gpointer","name","name","name","new","nullable","prepare_transformation","ref_mode","ref_mode","rust_parameters","to_owned","to_owned","to_owned","to_owned","to_owned","transfer","transformation","transformations","try_from","try_from","try_from","try_from","try_from","try_from_glib","try_into","try_into","try_into","try_into","try_into","typ","typ","typ","type_id","type_id","type_id","type_id","type_id","Trampoline","Trampolines","analyze","borrow","borrow_mut","bound_name","bounds","clone","clone_into","concurrency","destroy_index","fmt","from","inhibit","into","is_notify","name","nullable","parameters","ret","scope","to_owned","try_from","try_into","type_error","type_id","type_name","user_data_index","version","Default","NotImplemented","Option","OptionMandatory","Result","ResultInfallible","TryFromGlib","borrow","borrow_mut","clone","clone_into","default","fmt","from","from_parameter","from_return_value","from_type_defaults","into","or_type_defaults","to_owned","try_from","try_into","type_id","err_type","ok_type","ok_type","DerivesCopy","ImplementsDebug","IsExternal","IsIncomplete","IsPtr","IsVolatile","derives_copy","implements_debug","is_external","is_incomplete","is_ptr","is_volatile","check_fmt","format","Alias","Alias","Array","Async","Basic","Basic","Bitfield","Bitfield","Bool","Boolean","CArray","Call","Char","Class","Class","ClassMethod","Concurrency","Constant","Constructor","Container","Custom","Custom","Double","Enumeration","Enumeration","ErrorDomain","Field","Filename","FixedArray","Float","Forever","Full","Function","Function","Function","Function","FunctionKind","Global","HashTable","INTERNAL_NAMESPACE","INTERNAL_NAMESPACE_NAME","In","InOut","Infallible","Int","Int16","Int32","Int64","Int8","IntPtr","Interface","Interface","Library","List","Long","MAIN_NAMESPACE","Mandatory","Member","Method","Namespace","None","None","None","None","None","Notified","Nullable","OsString","Out","Parameter","ParameterDirection","ParameterScope","Pointer","Property","PtrArray","Quark","Record","Record","Return","SList","SSize","Send","SendSync","Short","Signal","Size","Transfer","Type","Type","TypeId","UChar","UInt","UInt16","UInt32","UInt64","UInt8","UIntPtr","ULong","UShort","UniChar","Union","Union","Unsupported","Utf8","VarArgs","VirtualMethod","add_constant","add_function","add_glib_priority","add_namespace","add_type","array_length","array_length","bits","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_array","c_class_type","c_class_type","c_identifier","c_identifier","c_identifier","c_identifier","c_includes","c_type","c_type","c_type","c_type","c_type","c_type","c_type","c_type","c_type","c_type","caller_allocates","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closure","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","constants","construct","construct_only","container","conversion_type","default","default","default","default","default","default","default","default","default","default","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deref","deref","deref","deref_mut","derives_copy","derives_copy","derives_copy","derives_copy","derives_copy","derives_copy","derives_copy","derives_copy","derives_copy","destroy","direction","disguised","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error_domain","fields","fields","fields","final_type","find_c_array","find_namespace","find_or_stub_type","find_type","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","from_str","from_str","from_str","full_name","function","functions","functions","functions","functions","functions","functions","functions","functions","get_deprecated_version","get_glib_name","get_inner_type","get_name","glib_get_type","glib_get_type","glib_get_type","glib_get_type","glib_get_type","glib_get_type","glib_name_index","gtype_struct_for","has_copy","has_destroy","has_free","has_ref","has_unref","hash","id","identifier_prefixes","implements","implements_debug","index","index","instance_parameter","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_abstract","is_abstract","is_action","is_async","is_basic","is_basic_type","is_basic_type","is_bitfield","is_call","is_class","is_crate","is_detailed","is_enumeration","is_error","is_external","is_external","is_external","is_external","is_external","is_final_type","is_forever","is_function","is_fundamental","is_fundamental","is_glib_crate","is_in","is_incomplete","is_incomplete","is_incomplete","is_incomplete","is_incomplete","is_incomplete","is_incomplete","is_incomplete","is_incomplete","is_interface","is_none","is_out","is_ptr","is_ptr","is_volatile","kind","members","members","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","namespace","namespace_mut","namespace_types","namespaces","new","ns_id","nullable","package_names","parameters","parameters","parent","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pointer","postprocessing","preprocessing","prerequisites","private","properties","properties","read_file","readable","record","ref_fn","register_version","requires_conversion","ret","ret","scope","shared_library","show_non_bound_types","signals","signals","status","symbol_prefix","symbol_prefix","symbol_prefix","symbol_prefix","symbol_prefix","symbol_prefix","symbol_prefixes","target_c_type","throws","tid_bool","tid_c_bool","tid_filename","tid_none","tid_os_string","tid_uint32","tid_utf8","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transfer","transfer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","typ","typ","typ","typ","typ","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_mut","type_struct","type_struct","types","types","union","unref_fn","value","value","version","version","version","version","version","version","version","version","version","version","versions","virtual_methods","virtual_methods","visit_functions_mut","visit_functions_mut","writable","apply_config","check_function_real_version"],"q":[[0,"libgir"],[97,"libgir::analysis"],[158,"libgir::analysis::bounds"],[253,"libgir::analysis::c_type"],[256,"libgir::analysis::child_properties"],[283,"libgir::analysis::class_builder"],[284,"libgir::analysis::class_hierarchy"],[296,"libgir::analysis::constants"],[312,"libgir::analysis::conversion_type"],[338,"libgir::analysis::conversion_type::ConversionType"],[340,"libgir::analysis::enums"],[358,"libgir::analysis::ffi_type"],[360,"libgir::analysis::flags"],[378,"libgir::analysis::function_parameters"],[491,"libgir::analysis::function_parameters::TransformationType"],[509,"libgir::analysis::functions"],[598,"libgir::analysis::general"],[613,"libgir::analysis::imports"],[670,"libgir::analysis::info_base"],[694,"libgir::analysis::namespaces"],[728,"libgir::analysis::object"],[794,"libgir::analysis::out_parameters"],[853,"libgir::analysis::properties"],[877,"libgir::analysis::record"],[898,"libgir::analysis::record_type"],[914,"libgir::analysis::ref_mode"],[940,"libgir::analysis::return_value"],[959,"libgir::analysis::rust_type"],[1023,"libgir::analysis::safety_assertion_mode"],[1047,"libgir::analysis::signals"],[1066,"libgir::analysis::signatures"],[1079,"libgir::analysis::special_functions"],[1173,"libgir::analysis::supertypes"],[1175,"libgir::analysis::symbols"],[1209,"libgir::analysis::trampoline_parameters"],[1299,"libgir::analysis::trampolines"],[1328,"libgir::analysis::try_from_glib"],[1351,"libgir::analysis::try_from_glib::TryFromGlib"],[1354,"libgir::analysis::types"],[1366,"libgir::fmt"],[1368,"libgir::library"],[2137,"libgir::update_version"],[2139,"core::option"],[2140,"core::fmt"],[2141,"core::fmt"],[2142,"alloc::string"],[2143,"core::convert"],[2144,"core::any"],[2145,"core::ops::function"],[2146,"core::marker"],[2147,"core::slice::iter"],[2148,"alloc::vec"],[2149,"core::iter::traits::iterator"],[2150,"alloc::boxed"],[2151,"core::borrow"],[2152,"core::iter::traits::collect"],[2153,"core::cmp"],[2154,"alloc::vec::into_iter"],[2155,"alloc::borrow"],[2156,"core::ops::function"],[2157,"std::path"],[2158,"core::hash"],[2159,"core::convert"]],"d":["","","","","","","","","","","","Path where files generated in normal and sys mode","","","","","","","","","","","","","","","","","","","","","","","An url that will be inserted into the docs as link that …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Helper to get the ffi crate import","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bound does not have an alias when <code>param: impl type_str</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","Coded without conversion.","Type implementing TryFromGlib&lt;Error=GlibNoneError&gt;.","Coded with from_glib_xxx.","Type implementing TryFromGlib where Err is neither …","Coded with from_glib.","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index of the destroy notification parameter associated …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index of the user data parameter associated with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the function can’t be generated","","","","","","","","","","","","","Given async function name tries to guess the name of …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Whether the function is hidden (an implementation detail) …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","In order to generate docs links we need to know in which …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Provides assistance in generating use declarations.","","Declares that name should be available through its last …","Declares that <code>name</code> is defined in scope","Declares that name should be available through its full …","Declares that name should be available through its full …","","Declares that name should be available through its last …","Declares that name should be available through its last …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","TODO: return iterator","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","The location of an item within the object","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the location of the function within this object","Generate doc name based on function location within this …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Specific to fundamental types","Whether we should generate an impl block for this object …","","","","","","","","","","","","Specific to fundamental types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","Boxed record that use g_boxed_copy, g_boxed_free. Must …","Boxed record with custom copy/free functions","","Referencecounted record","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Contains the error value","","","Contains the success value","","A <code>RustType</code> definition and its associated types to be <code>use</code>d.","","","","","","","","","","","","Create a <code>RustTypeBuilder</code> which allows specifying additional","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Try building the <code>RustType</code> with no specific additional …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Convert this symbol into a trait","Convert this into a method of a trait","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","This field is used to give the type name when generating …","It’s used to group callbacks","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Checks if given type derives Copy trait.","Checks if given type implements Debug trait.","Checks if type is external aka opaque type.","Checks if given type is incomplete, i.e., its size is …","Checks if given type is some kind of pointer.","Checks if given type has volatile qualifier.","","","","","","","Check if <code>cargo fmt</code> available","Run <code>cargo fmt</code> on path","","","","Used for the duration of the asynchronous call.","","","","","","","","Used only for the duration of the call.","","","","","","","","","","","","","","","","","","","Forever scope","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parameter is not of callback type.","","","Used until notified with associated destroy notify …","","","","","","Annotation describing lifetime requirements / guarantees …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C headers, relative to include directories provided by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index of the user data parameter associated with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index of the destroy notification parameter associated …","","A ‘disguised’ record is one where the c:type is a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","If the type is an Alias containing a basic, it’ll return …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Types from a single namespace in alphabetical order.","","","","","","","","","","","","","","","","","","","A ‘pointer’ record is one where the c:type is a …","","","","","","","","","","Specific to fundamental types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,3,3,0,0,3,3,0,0,4,0,1,1,3,4,1,3,4,1,4,0,3,3,0,1,4,3,1,1,1,3,3,3,3,1,1,1,1,1,1,0,1,3,4,1,3,4,3,1,1,1,1,3,4,3,3,4,4,1,0,4,1,1,1,4,1,1,1,4,0,1,1,1,1,1,1,4,0,4,1,3,1,1,3,4,1,3,4,4,1,3,4,4,4,0,1,1,0,0,20,20,0,0,0,0,0,0,20,0,20,20,20,0,0,20,20,20,20,20,20,0,20,20,20,20,0,0,0,20,0,0,20,0,0,0,20,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,20,0,20,20,0,33,0,0,0,0,33,33,0,28,28,34,35,33,34,28,32,35,33,34,28,32,35,32,34,34,32,33,34,28,32,35,33,34,28,32,35,28,33,34,33,33,33,34,34,34,32,33,34,28,32,35,33,34,28,32,35,35,28,28,33,33,34,28,32,35,28,28,28,33,34,32,33,34,28,32,35,33,34,28,32,35,33,34,28,32,35,28,33,34,28,32,35,34,35,28,0,0,0,0,0,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,0,44,44,44,44,44,0,44,44,44,44,44,0,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,50,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,127,127,0,21,21,21,21,21,21,21,21,21,0,21,21,21,21,21,21,21,0,0,0,25,25,25,25,25,25,25,25,25,0,25,25,25,25,25,25,25,0,58,58,0,0,0,58,58,58,58,58,58,0,0,0,55,56,57,30,58,59,55,56,57,30,58,59,55,55,30,30,56,57,30,58,59,55,56,57,30,58,59,55,55,30,30,56,57,30,58,59,55,56,57,30,58,59,55,56,56,57,59,59,30,56,57,30,58,59,55,30,58,56,30,57,30,30,30,55,30,58,56,57,30,58,59,55,30,59,55,56,57,30,58,59,55,56,30,56,57,30,58,59,55,57,30,56,57,30,58,59,55,30,128,128,128,129,129,129,129,130,131,129,132,131,131,129,129,129,129,129,0,0,0,0,62,22,22,22,61,62,22,61,62,22,61,22,61,22,22,61,62,61,62,22,22,22,22,22,22,22,22,22,62,61,0,0,61,0,61,62,22,61,62,22,22,22,22,61,22,61,62,22,22,0,61,62,22,22,61,62,22,22,22,22,61,22,22,22,22,22,22,22,62,61,62,22,61,62,22,61,62,22,61,62,22,22,22,22,22,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,0,0,0,38,38,38,38,38,38,38,68,38,66,68,38,66,38,66,38,66,66,66,66,38,66,68,68,68,66,66,66,66,38,66,68,38,66,68,38,66,38,38,66,38,66,68,38,66,68,38,66,68,38,66,66,38,38,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,0,0,0,0,7,71,7,71,7,7,71,7,71,71,7,71,7,71,71,71,7,7,0,7,7,7,7,71,7,71,7,71,7,72,72,72,72,72,72,0,0,72,26,72,26,72,26,26,26,26,26,26,0,72,72,26,26,72,72,72,72,26,72,26,72,26,26,26,26,26,26,0,26,26,26,0,72,26,26,26,26,26,26,26,26,26,26,26,26,72,26,72,26,72,26,72,26,26,26,76,77,0,0,77,77,77,76,0,77,76,0,76,77,75,76,77,75,0,76,77,76,77,76,77,75,76,77,76,76,76,77,77,77,76,77,75,76,77,75,76,77,75,75,75,75,75,76,77,76,77,75,76,77,75,76,77,75,0,0,0,42,42,42,42,42,42,42,42,42,0,42,42,42,42,42,42,42,42,42,42,42,42,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,27,27,27,27,82,82,0,82,82,82,82,82,82,82,82,82,82,82,82,82,79,79,79,79,79,79,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,0,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,52,87,87,52,0,0,0,0,87,84,84,86,87,84,86,87,84,84,86,87,84,87,84,86,84,86,87,84,87,87,87,84,84,84,87,84,86,87,84,84,84,86,87,84,84,86,86,86,87,84,86,86,86,87,84,86,86,87,84,84,86,87,84,84,92,92,92,0,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,0,78,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,0,0,94,94,94,94,94,94,94,94,94,94,94,96,96,96,96,96,0,0,96,0,96,98,0,0,96,0,96,97,98,99,95,96,97,98,99,95,96,97,98,99,96,97,98,99,96,98,96,98,95,96,98,96,96,96,98,98,98,0,97,96,97,98,99,95,96,97,98,99,95,96,95,97,95,96,97,98,99,95,96,98,96,97,98,99,95,95,96,97,98,99,95,96,97,98,99,95,99,96,97,98,99,95,0,97,99,0,0,0,0,102,101,102,101,101,101,101,102,102,102,102,102,101,102,101,102,102,101,102,102,102,102,102,102,0,102,102,101,102,101,102,101,107,0,107,0,0,0,0,107,0,104,105,106,103,107,104,105,106,103,107,103,105,104,105,106,103,107,104,105,106,103,107,106,103,104,104,105,106,103,107,104,105,106,103,107,107,103,106,106,104,105,106,103,107,105,104,105,106,103,104,103,104,106,103,104,105,106,103,107,106,106,103,104,105,106,103,107,104,104,105,106,103,107,104,105,106,104,105,106,103,107,0,0,0,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,0,109,109,109,109,91,91,91,91,91,91,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,133,133,134,0,0,0,0,0,0,135,136,137,138,139,140,0,0,0,18,18,90,0,18,0,18,115,115,18,90,115,0,18,114,0,0,114,108,0,18,115,0,18,0,0,115,18,115,90,108,0,114,124,18,0,114,18,0,0,83,83,0,115,115,115,115,115,115,0,18,0,18,115,0,0,0,114,0,108,83,90,31,115,90,0,115,83,0,0,0,115,0,18,124,0,18,83,18,115,31,31,115,0,115,0,0,115,0,115,115,115,115,115,115,115,115,115,115,0,18,115,115,115,114,16,16,16,16,16,121,54,121,108,83,90,80,112,113,114,31,115,17,116,48,123,124,51,53,81,121,117,41,54,29,93,118,119,120,18,122,16,108,83,90,80,112,113,114,31,115,17,116,48,123,124,51,53,81,121,117,41,54,29,93,118,119,120,18,122,16,18,118,119,116,48,123,29,122,48,51,53,81,121,117,41,54,118,119,54,108,83,90,80,112,113,114,31,115,17,54,108,83,90,80,112,113,114,31,115,17,54,54,17,116,51,53,81,117,29,118,119,120,17,116,51,53,81,117,29,118,119,120,122,41,41,18,120,83,90,31,17,81,121,117,118,119,122,48,123,51,53,81,41,29,93,118,119,80,112,113,80,115,17,116,81,121,117,29,119,18,54,54,81,116,48,123,51,53,81,121,117,41,54,29,93,118,119,122,116,48,123,51,53,81,41,29,93,118,119,122,108,83,90,80,112,113,114,31,115,17,116,51,53,81,117,29,118,119,120,18,108,108,108,83,83,83,90,90,90,80,80,80,112,112,112,113,113,113,114,114,114,31,31,31,115,115,115,17,17,17,116,116,116,51,51,51,53,53,53,81,81,81,117,117,117,29,29,29,118,118,118,119,119,119,120,120,120,18,18,18,51,81,117,119,119,18,16,16,16,108,83,90,80,112,113,114,31,115,17,116,48,123,124,51,53,81,121,117,41,54,29,93,118,119,120,18,18,122,16,108,83,90,80,112,113,114,31,115,17,116,48,123,124,51,53,81,121,117,41,54,29,93,118,119,120,18,122,16,108,83,90,114,31,17,18,18,51,53,81,117,118,119,122,18,18,18,18,51,53,81,117,118,119,122,81,81,81,81,81,81,17,17,122,119,121,122,16,54,108,83,90,80,112,113,114,31,115,17,116,48,123,124,51,53,81,121,117,41,54,29,93,118,119,120,18,122,16,18,119,93,90,18,17,18,18,90,18,16,93,18,54,116,81,117,119,18,18,90,18,18,119,16,83,115,17,116,81,121,117,29,119,18,18,90,83,116,121,121,29,51,53,116,48,123,51,53,81,121,117,41,54,29,93,118,119,120,122,16,16,16,16,16,17,54,122,29,93,119,17,116,51,53,81,117,29,118,119,120,81,16,16,118,121,118,119,16,41,18,119,16,115,29,93,54,122,16,118,119,123,51,53,81,117,118,119,122,116,29,17,17,17,17,17,17,17,108,83,90,80,112,113,114,31,115,17,54,18,41,54,108,83,90,80,112,113,114,31,115,17,116,48,123,124,51,53,81,121,117,41,54,29,93,118,119,120,18,122,16,108,83,90,80,112,113,114,31,115,17,116,48,123,124,51,53,81,121,117,41,54,29,93,118,119,120,18,122,16,116,48,121,41,54,16,108,83,90,80,112,113,114,31,115,17,116,48,123,124,51,53,81,121,117,41,54,29,93,118,119,120,18,122,16,16,118,119,16,122,18,119,48,123,48,123,51,53,81,41,29,93,118,119,122,118,119,18,122,41,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],0,0,[3,3],[[-1,-2],2,[],[]],[4,2],0,0,[[],3],0,0,0,[[3,3],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,0,0,[[1,[6,[0]]],[[6,[0]]]],[[1,7],[[6,[0]]]],0,[[1,8],9],[[3,8],9],[[4,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[10,[[11,[3]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,5],[3,5],[[4,[6,[12]],[6,[0]]],5],[[4,[6,[12]],[6,[0]]],5],0,0,0,[1,13],0,0,[4,10],0,0,[[1,4,[6,[12]]],[[6,[0]]]],0,0,[[-1,-2,[14,[13]],-1,-1,-1,-1,5,5,5],[[11,[1,13]]],[[15,[[6,[10]]]]],[[15,[[6,[3]]]]]],0,[[1,16],2],0,0,0,0,0,[[4,17],13],0,[-1,-2,[],[]],0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[4,17],18],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[],20],0,0,0,0,[[20,4,-1,-2],[[6,[[2,[21,22]]]]],[23,24],[23,24]],[[20,4,-1,-2],[[6,[[2,[25,22]]]]],[23,24],[23,24]],[[20,4,-1],[[6,[22]]],[23,24]],[[20,4,-1,-2],[[6,[[2,[26,22]]]]],[23,24],[23,24]],[[20,4,-1,-2],[[6,[[2,[26,22]]]]],[23,24],[23,24]],[[20,4,-1,-2],[[6,[[2,[27,22]]]]],[23,24],[23,24]],0,0,0,[[20,8],9],[-1,-1,[]],0,0,0,0,0,0,[-1,-2,[],[]],[10,5],0,0,0,0,0,0,0,0,0,0,[4,2],0,0,0,0,0,0,0,0,0,[-1,[[11,[-2]]],[],[]],0,[-1,[[11,[-2]]],[],[]],[-1,19,[]],0,0,0,0,0,0,0,0,0,[[28,4,29,30,5,31,[14,[0]]],[[2,[[6,[13]],[6,[32]]]]]],[[28,10,10,33,5],2],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[33,33],[34,34],[28,28],[32,32],[35,35],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],28],[[33,33],5],[[34,34],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[[33,8],9],[[34,8],9],[[28,8],9],[[32,8],9],[[35,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[4,17],[[6,[35]]]],[[28,10],[[6,[34]]]],[[33,5,5,5],13],[33,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[28,5],[28,[[36,[34]]]],[28,[[36,[37]]]],[33,5],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[4,17],[[6,[33]]]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,[[28,38],2],[[4,17,10],5],[10,5],[10,[[2,[13,13]]]],0,0,[[4,[6,[0]],17,38],39],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[40,40],[[-1,-2],2,[],[]],0,[[40,8],9],[-1,-1,[]],0,0,[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],0,[-1,19,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[44,8],9],[-1,-1,[]],[-1,-2,[],[]],[16,44],[[44,17],[[46,[45]]]],[[44,17],[[14,[17]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[47,8],9],[-1,-1,[]],0,[-1,-2,[],[]],0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],0,[-1,19,[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[50,5],[50,50],[[-1,-2],2,[],[]],[[],50],[[50,50],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[50,8],9],[-1,-1,[]],[-1,-2,[],[]],[[4,17],50],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],21],[[21,8],9],[-1,-1,[]],0,0,[-1,-2,[],[]],0,0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[21,16],51],[-1,19,[]],0,0,[[4,17,10],52],[[4,17,10],[[6,[13]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],25],[[25,8],9],[-1,-1,[]],0,0,[-1,-2,[],[]],0,0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[25,16],53],[-1,19,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[4,[14,[54]],[14,[0]],5,5,5],55],[[55,4,[6,[56]]],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[56,56],[57,57],[30,30],[58,58],[59,59],[55,55],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],55],0,0,[[56,8],9],[[57,8],9],[[30,8],9],[[58,8],9],[[59,8],9],[[55,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[4,54,[14,[0]]],56],[[4,54,[14,[0]]],56],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[58,5],0,0,0,0,0,0,0,0,[[58,10],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],0,0,[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[61,61],[62,62],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[22,10],0,0,0,0,0,[[22,[6,[10]],[6,[10]],5],13],0,0,0,0,[[4,10],[[6,[29]]]],[[-1,[6,[54]]],[[6,[63]]],64],0,[10,13],[[61,8],9],[[62,8],9],[[22,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[22,4],5],[[4,17],5],0,0,[22,5],0,0,0,0,0,0,0,0,0,0,0,0,[[22,4],5],[[22,4],5],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[65,65],[[-1,-2],2,[],[]],[[65,8],9],[-1,-1,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],0,0,0,0,[[38,10],2],[[38,10],2],[[38,10],2],[[38,10,[6,[0]]],2],[[38,[14,[13]]],2],[[38,10,[6,[0]],[6,[10]]],2],[[38,10,[6,[0]]],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[38,38],[66,66],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[66,66],67],[[-1,-2],67,[],[]],0,[[],38],[[],66],[68],[68],[68,2],[[66,66],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[38,8],9],[[66,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[38,[[69,[[2,[13,66]]]]]],[16,38],[[66,66],[[6,[67]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,[[38,[6,[0]],[6,[13]]],68],[[16,10],38],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[70,[[43,[22]]]],[[],70],0,[[70,8],9],[-1,-1,[]],0,[70,[[43,[22]]]],0,0,[-1,-2,[],[]],[70,[[43,[22]]]],0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[7,8],9],[[71,8],9],[-1,-1,[]],[-1,-1,[]],0,0,[[71,12],7],[-1,-2,[],[]],[-1,-2,[],[]],0,[71,7],0,0,[16,71],0,0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[72,72],[[-1,-2],2,[],[]],[[],26],[26,70],[[72,72],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[[72,8],9],[[26,8],9],[-1,-1,[]],[-1,-1,[]],[[26,22],72],[[26,22],[[2,[[73,[10]],[73,[10]]]]]],0,0,[26,5],[[[14,[[2,[[43,[42]],17]]]]],5],0,0,[26,5],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[26,5],[26,5],0,0,0,[26,5],0,0,0,[-1,-2,[],[]],0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[4,29,[14,[30]],74,[14,[0]]],[[2,[75,5]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[4,54],5],[76,76],[77,77],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],76],[[],77],[[],75],[[76,76],5],[[77,77],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[76,8],9],[[77,8],9],[[75,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[75,5],[75,[[36,[56]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[[4,17,10,[14,[0]]],5],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[42,8],9],[-1,-1,[]],0,0,0,[[4,41],[[2,[79,79,80]]]],[-1,-2,[],[]],0,0,0,0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],0,[-1,19,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[],27],[27,70],0,[[27,8],9],[-1,-1,[]],0,0,[-1,-2,[],[]],0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[27,16],81],[-1,19,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[82,82],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[-1,-1,[]],[-1,-2,[],[]],[81,82],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[79,79],[[-1,-2],2,[],[]],[[79,79],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[79,8],9],[-1,-1,[]],[10,[[11,[79]]]],[-1,-2,[],[]],[79,5],[[4,17,83],79],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],[[4,54,5,5],79],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[74,74],[[-1,-2],2,[],[]],0,[[],74],[[74,8],9],[-1,-1,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],0,0,0,0,0,0,0,0,0,[[84,-1],84,85],[84,10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[4,17],86],[[86,[14,[0]]],86],[87,87],[84,84],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[86,31],86],[[],84],[[86,83],86],[[87,87],5],[[84,84],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[87,8],9],[[84,8],9],[-1,-1,[]],[-1,-1,[]],[88,-1,[]],[-1,84,89],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[84,[[43,[13]]]],[[86,80],86],[[86,79],86],[[86,90],86],[-1,-2,[],[]],[-1,-2,[],[]],[86,52],[86,52],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[86,91],86],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[4,17],52],[-1,19,[]],[-1,19,[]],[-1,19,[]],[84,[[43,[13]]]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[92,92],[[-1,-2],2,[],[]],[[],92],[[92,92],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[92,8],9],[-1,-1,[]],[10,[[11,[92,13]]]],[-1,-2,[],[]],[92,5],[[4,5,55],92],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[78,8],9],[-1,-1,[]],0,[-1,-2,[],[]],0,0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[94,8],9],[-1,-1,[]],[[4,10,5,17,60,[14,[17]]],[[2,[5,[6,[0]]]]]],[[94,4,10,[14,[17]]],[[2,[5,[6,[0]]]]]],[-1,-2,[],[]],[29,94],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[95,38],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[96,96],[97,97],[98,98],[99,99],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[96,96],67],[[98,98],67],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[],95],[[96,96],5],[[98,98],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,[[96,8],9],[[97,8],9],[[98,8],9],[[99,8],9],[[95,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[10,[[11,[96]]]],[95,[[100,[13,99]]]],0,[[95,96],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[96,96],[[6,[67]]]],[[98,98],[[6,[67]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[95,[[100,[96,97]]]],[95,[[100,[96,97]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],0,[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[[[14,[22]],95,96],2],0,0,[[4,17,[6,[0]],38,5],[[43,[65]]]],[[4,17],[[43,[17]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[101,10],[[6,[102]]]],[[101,10],[[6,[102]]]],[[101,17],[[6,[102]]]],[102,102],[[-1,-2],2,[],[]],[102,[[6,[10]]]],[[],102],[[102,8],9],[[101,8],9],[-1,-1,[]],[-1,-1,[]],[102,13],[-1,-2,[],[]],[-1,-2,[],[]],[102,5],[[102,10],2],[[102,10],2],[102,10],[102,[[6,[10]]]],[102,13],[[16,71],101],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,0,0,0,[[4,[14,[54]],17,[14,[0]],[6,[[43,[0]]]]],103],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[104,104],[105,105],[106,106],[103,103],[107,107],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[],103],0,[[104,8],9],[[105,8],9],[[106,8],9],[[103,8],9],[[107,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[10,[[11,[107]]]],[[103,63],[[6,[106]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[105,4],5],0,0,0,[63,103],0,[[103,4,17,13,13,83,108,80,79,50],106],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],0,0,0,[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[109,109],[[-1,-2],2,[],[]],0,0,[[109,8],9],[-1,-1,[]],0,[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[4,54],[[6,[10]]]],[-1,19,[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[91,91],[[-1,-2],2,[],[]],[[],91],[[91,8],9],[-1,-1,[]],[[4,17,[14,[0]]],91],[[4,17,[14,[0]]],91],[[4,17],91],[-1,-2,[],[]],[[91,4,17],[[73,[91]]]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],0,0,0,0,0,0,0,0,0,[[-1,16],5,[]],[[-1,16],5,[]],[[-1,16],5,[]],[[-1,16],5,[]],[-1,5,[]],[-1,5,[]],[[],5],[110,2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[16,111,48],2],[[16,111,29],2],[[16,3],2],[[16,10],111],[[16,111,10,18],17],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[16,17,[6,[111]],[6,[13]]],17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[108,108],[83,83],[90,90],[80,80],[112,112],[113,113],[114,114],[31,31],[115,115],[17,17],[54,54],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[17,17],67],[[116,116],67],[[51,51],67],[[53,53],67],[[81,81],67],[[117,117],67],[[29,29],67],[[118,118],67],[[119,119],67],[[120,120],67],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],0,0,0,[[16,10,[43,[17]]],[[6,[17]]]],0,[[],83],[[],90],[[],31],[[],17],[[],81],[[],121],[[],117],[[],118],[[],119],[[],122],0,0,0,0,0,0,0,0,0,0,[80,5],[112,5],[113,5],[80,5],[[-1,16],5,[]],[[-1,16],5,[]],[[-1,16],5,[]],[[-1,16],5,[]],[[-1,16],5,[]],[[-1,16],5,[]],[[-1,16],5,[]],[[-1,16],5,[]],[[-1,16],5,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[108,108],5],[[83,83],5],[[90,90],5],[[80,80],5],[[112,112],5],[[113,113],5],[[114,114],5],[[31,31],5],[[115,115],5],[[17,17],5],[[116,116],5],[[51,51],5],[[53,53],5],[[81,81],5],[[117,117],5],[[29,29],5],[[118,118],5],[[119,119],5],[[120,120],5],[[18,18],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,0,0,0,[[16,17,[6,[111]]],17],[[16,10],[[6,[111]]]],[[16,111,10],17],[[16,111,10],[[6,[17]]]],[[108,8],9],[[83,8],9],[[90,8],9],[[80,8],9],[[112,8],9],[[113,8],9],[[114,8],9],[[31,8],9],[[115,8],9],[[17,8],9],[[116,8],9],[[48,8],9],[[123,8],9],[[124,8],9],[[51,8],9],[[53,8],9],[[81,8],9],[[121,8],9],[[117,8],9],[[41,8],9],[[54,8],9],[[29,8],9],[[93,8],9],[[118,8],9],[[119,8],9],[[120,8],9],[[18,8],9],[[18,8],9],[[122,8],9],[[16,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[10,[[11,[108,13]]]],[10,[[11,[83,13]]]],[10,[[11,[90,13]]]],[10,[[11,[114,13]]]],[10,[[11,[31,13]]]],[[17,16],13],[[16,29],17],[18,[[14,[29]]]],0,0,0,0,0,0,0,[18,[[6,[0]]]],[18,[[6,[10]]]],[[18,4],[[6,[[2,[18,111]]]]]],[18,13],0,0,0,0,0,0,0,0,[81,5],[81,5],[81,5],[81,5],[81,5],[[17,-1],2,125],0,0,0,[[121,16],5],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,5],0,0,[90,5],[18,5],[[17,4],5],[[18,4],5],[18,5],[90,5],[18,5],[[16,10],5],0,[18,5],0,[[116,16],5],[[81,16],5],[[117,16],5],[[119,16],5],[[18,16],5],[18,5],[90,5],[18,5],[18,5],0,[16,5],[83,5],[[115,16],5],[[17,16],5],[[116,16],5],[[81,16],5],[[121,16],5],[[117,16],5],[[29,16],5],[[119,16],5],[[18,16],5],[18,5],[90,5],[83,5],[116,5],[121,5],[121,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[16,111],122],[[16,111],122],[[16,111],[[46,[45]]]],0,[10,16],0,0,0,0,0,0,[[17,17],[[6,[67]]]],[[116,116],[[6,[67]]]],[[51,51],[[6,[67]]]],[[53,53],[[6,[67]]]],[[81,81],[[6,[67]]]],[[117,117],[[6,[67]]]],[[29,29],[[6,[67]]]],[[118,118],[[6,[67]]]],[[119,119],[[6,[67]]]],[[120,120],[[6,[67]]]],0,[[16,1],2],[[16,3],2],0,0,0,0,[[16,[14,[-1]],[43,[13]]],[[11,[2,13]]],[[126,[110]]]],0,[[16,81,111],17],0,0,[115,5],0,0,0,0,[[16,4],2],0,0,0,0,0,0,0,0,0,0,0,0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],0,0,0,0,0,[[16,17],18],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[[16,17],18],0,0,[16,[[46,[45]]]],0,[[16,117,111],17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[18,-1],5,0],[[122,-1],5,0],0,[[16,1],2],[16,2]],"c":[],"p":[[3,"Config",0],[15,"tuple"],[4,"WorkMode",0],[3,"Env",0],[15,"bool"],[4,"Option",2139],[3,"Namespace",694],[3,"Formatter",2140],[6,"Result",2140],[15,"str"],[4,"Result",2141],[6,"NsId",694],[3,"String",2142],[15,"slice"],[8,"Into",2143],[3,"Library",1368],[3,"TypeId",1368],[4,"Type",1368],[3,"TypeId",2144],[3,"Analysis",97],[3,"Info",340],[3,"Info",509],[8,"Fn",2145],[8,"Copy",2146],[3,"Info",360],[3,"Info",728],[3,"Info",877],[3,"Bounds",158],[3,"Function",1368],[3,"CParameter",378],[4,"Concurrency",1368],[3,"CallbackInfo",158],[4,"BoundType",158],[3,"Bound",158],[3,"PropertyBound",158],[3,"Iter",2147],[15,"char"],[3,"Imports",613],[6,"ChildProperties",256],[3,"ChildProperty",256],[3,"Property",1368],[3,"Property",853],[3,"Vec",2148],[3,"Info",284],[8,"Iterator",2149],[3,"Box",2150],[3,"Info",296],[3,"Constant",1368],[8,"Borrow",2151],[4,"ConversionType",312],[3,"Enumeration",1368],[6,"Result",959],[3,"Bitfield",1368],[3,"Parameter",1368],[3,"Parameters",378],[3,"Parameter",378],[3,"RustParameter",378],[4,"TransformationType",378],[3,"Transformation",378],[6,"Signatures",1066],[3,"AsyncTrampoline",509],[3,"AsyncFuture",509],[15,"usize"],[8,"IntoIterator",2152],[3,"StatusedTypeId",598],[3,"ImportConditions",613],[4,"Ordering",2153],[3,"ImportsWithDefault",613],[3,"IntoIter",2154],[3,"InfoBase",670],[3,"Info",694],[4,"LocationInObject",728],[4,"Cow",2155],[3,"Info",940],[3,"Info",794],[4,"ThrowFunctionReturnStrategy",794],[4,"Mode",794],[3,"Info",1047],[4,"RefMode",914],[3,"Nullable",1368],[3,"Record",1368],[4,"RecordType",898],[4,"ParameterDirection",1368],[3,"RustType",959],[8,"FnOnce",2145],[3,"RustTypeBuilder",959],[4,"TypeError",959],[15,"never"],[8,"ToString",2142],[4,"ParameterScope",1368],[4,"TryFromGlib",1328],[4,"SafetyAssertionMode",1023],[3,"Signal",1368],[3,"Signature",1066],[3,"Infos",1079],[4,"Type",1079],[3,"TraitInfo",1079],[4,"FunctionType",1079],[3,"FunctionInfo",1079],[3,"BTreeMap",2156],[3,"Info",1175],[3,"Symbol",1175],[3,"Parameters",1209],[3,"RustParameter",1209],[3,"CParameter",1209],[3,"Transformation",1209],[4,"TransformationType",1209],[4,"Transfer",1368],[3,"Trampoline",1299],[3,"Path",2157],[15,"u16"],[3,"Mandatory",1368],[3,"Infallible",1368],[4,"FunctionKind",1368],[4,"Basic",1368],[3,"Alias",1368],[3,"Union",1368],[3,"Interface",1368],[3,"Class",1368],[3,"Custom",1368],[3,"Field",1368],[3,"Namespace",1368],[3,"Member",1368],[4,"ErrorDomain",1368],[8,"Hasher",2158],[8,"AsRef",2143],[13,"Result",338],[13,"Length",491],[13,"ToGlibPointer",491],[13,"ToGlibDirect",491],[13,"ToGlibScalar",491],[13,"ToGlibUnknown",491],[13,"Result",1351],[13,"ResultInfallible",1351],[8,"DerivesCopy",1354],[8,"ImplementsDebug",1354],[8,"IsExternal",1354],[8,"IsIncomplete",1354],[8,"IsPtr",1354],[8,"IsVolatile",1354]],"b":[[1785,"impl-Display-for-Type"],[1786,"impl-Debug-for-Type"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
